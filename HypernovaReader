public class Main {

    public static void main(String[] args) throws NoSuchFieldException {
        Main main = new Main();
        Unsafe unsafe = getUnsafeInstance();
        System.out.println("starting is "+ main.val);
        unsafe.putObject(main,unsafe.objectFieldOffset(Main.class.getField("val")), null);
        System.out.println("null is " + main.val);
        unsafe.putObject(main,unsafe.objectFieldOffset(Main.class.getField("val")), main);
        System.out.println("main obj is " + main.val);
    }

    public int val = 1000;

    private static sun.misc.Unsafe getUnsafeInstance() {
        java.lang.reflect.Field[] fields = sun.misc.Unsafe.class.getDeclaredFields();

        for (java.lang.reflect.Field field : fields) {
            if (!field.getType().equals(sun.misc.Unsafe.class)) {
                continue;
            }

            int modifiers = field.getModifiers();
            if (!(java.lang.reflect.Modifier.isStatic(modifiers) && java.lang.reflect.Modifier.isFinal(modifiers))) {
                continue;
            }

            try {
                field.setAccessible(true);
                return (sun.misc.Unsafe)field.get(null);
            } catch (Exception ignored) {
            }
            break;
        }

        throw new UnsupportedOperationException("LWJGL requires sun.misc.Unsafe to be available.");
    }
}
